generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]
  comments      Comment[]
  projects      Project[]
}

model Post {
  id            String    @id @default(cuid())
  title         String
  content       String
  featuredImage String?
  published     Boolean   @default(false)
  showOnHomepage Boolean  @default(false)
  publishedAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  author        User      @relation(fields: [authorId], references: [id])
  authorId      String
  comments      Comment[]
}

model Project {
  id                String   @id @default(cuid())
  title             String
  description       String
  content           String   @default("")
  image             String?
  gradientStart     String   @default("from-blue-500")
  gradientEnd       String   @default("to-purple-600")
  emoji             String   @default("ðŸš€")
  technologies      String   // JSON string of technologies
  projectUrl        String?
  githubUrl         String?
  featured          Boolean  @default(false)
  featuredOrder     Int      @default(0)
  published         Boolean  @default(false)
  publishedAt       DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  author            User     @relation(fields: [authorId], references: [id])
  authorId          String
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

enum Role {
  USER
  ADMIN
  SUPERUSER
} 